// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace EPayments.Admin.Controllers
{
    public partial class DistributionController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DistributionController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Distributions()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Distributions);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Payments()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Payments);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadPdf()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadPdf);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadExcel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadExcel);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Distribute()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Distribute);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> GetFile()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFile);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DistributionController Actions { get { return MVC.Distribution; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Distribution";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Distribution";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Distributions = "Distributions";
            public readonly string Payments = "Payments";
            public readonly string DownloadPdf = "DownloadPdf";
            public readonly string DownloadExcel = "DownloadExcel";
            public readonly string Distribute = "Distribute";
            public readonly string GetFile = "GetFile";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Distributions = "Distributions";
            public const string Payments = "Payments";
            public const string DownloadPdf = "DownloadPdf";
            public const string DownloadExcel = "DownloadExcel";
            public const string Distribute = "Distribute";
            public const string GetFile = "GetFile";
        }


        static readonly ActionParamsClass_Distributions s_params_Distributions = new ActionParamsClass_Distributions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Distributions DistributionsParams { get { return s_params_Distributions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Distributions
        {
            public readonly string searchDO = "searchDO";
        }
        static readonly ActionParamsClass_Payments s_params_Payments = new ActionParamsClass_Payments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Payments PaymentsParams { get { return s_params_Payments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Payments
        {
            public readonly string searchDO = "searchDO";
        }
        static readonly ActionParamsClass_DownloadPdf s_params_DownloadPdf = new ActionParamsClass_DownloadPdf();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DownloadPdf DownloadPdfParams { get { return s_params_DownloadPdf; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DownloadPdf
        {
            public readonly string searchDO = "searchDO";
        }
        static readonly ActionParamsClass_DownloadExcel s_params_DownloadExcel = new ActionParamsClass_DownloadExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DownloadExcel DownloadExcelParams { get { return s_params_DownloadExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DownloadExcel
        {
            public readonly string searchDO = "searchDO";
        }
        static readonly ActionParamsClass_Distribute s_params_Distribute = new ActionParamsClass_Distribute();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Distribute DistributeParams { get { return s_params_Distribute; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Distribute
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetFile s_params_GetFile = new ActionParamsClass_GetFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFile GetFileParams { get { return s_params_GetFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFile
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Distributions = "Distributions";
                public readonly string Payments = "Payments";
            }
            public readonly string Distributions = "~/Views/Distribution/Distributions.cshtml";
            public readonly string Payments = "~/Views/Distribution/Payments.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DistributionController : EPayments.Admin.Controllers.DistributionController
    {
        public T4MVC_DistributionController() : base(Dummy.Instance) { }

        [NonAction]
        partial void DistributionsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, EPayments.Admin.Models.Distributions.DistributionRevenueSearchDO searchDO);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Distributions(EPayments.Admin.Models.Distributions.DistributionRevenueSearchDO searchDO)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Distributions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchDO", searchDO);
            DistributionsOverride(callInfo, searchDO);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void PaymentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, EPayments.Admin.Models.Distributions.PaymentSearchDO searchDO);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Payments(EPayments.Admin.Models.Distributions.PaymentSearchDO searchDO)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Payments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchDO", searchDO);
            PaymentsOverride(callInfo, searchDO);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void DownloadPdfOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, EPayments.Admin.Models.Distributions.PaymentSearchDO searchDO);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadPdf(EPayments.Admin.Models.Distributions.PaymentSearchDO searchDO)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadPdf);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchDO", searchDO);
            DownloadPdfOverride(callInfo, searchDO);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void DownloadExcelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, EPayments.Admin.Models.Distributions.PaymentSearchDO searchDO);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadExcel(EPayments.Admin.Models.Distributions.PaymentSearchDO searchDO)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchDO", searchDO);
            DownloadExcelOverride(callInfo, searchDO);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void DistributeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Distribute(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Distribute);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DistributeOverride(callInfo, id);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void GetFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> GetFile(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetFileOverride(callInfo, id);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
