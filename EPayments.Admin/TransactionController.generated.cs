// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace EPayments.Admin.Controllers
{
    public partial class TransactionController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected TransactionController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> List()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Payments()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Payments);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadExcel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadExcel);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadPdf()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadPdf);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadTransactionPaymentsExcel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadTransactionPaymentsExcel);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadTransactionPaymentsPdf()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadTransactionPaymentsPdf);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public TransactionController Actions { get { return MVC.Transaction; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Transaction";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Transaction";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string List = "List";
            public readonly string Payments = "Payments";
            public readonly string DownloadExcel = "DownloadExcel";
            public readonly string DownloadPdf = "DownloadPdf";
            public readonly string DownloadTransactionPaymentsExcel = "DownloadTransactionPaymentsExcel";
            public readonly string DownloadTransactionPaymentsPdf = "DownloadTransactionPaymentsPdf";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string List = "List";
            public const string Payments = "Payments";
            public const string DownloadExcel = "DownloadExcel";
            public const string DownloadPdf = "DownloadPdf";
            public const string DownloadTransactionPaymentsExcel = "DownloadTransactionPaymentsExcel";
            public const string DownloadTransactionPaymentsPdf = "DownloadTransactionPaymentsPdf";
        }


        static readonly ActionParamsClass_List s_params_List = new ActionParamsClass_List();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_List ListParams { get { return s_params_List; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_List
        {
            public readonly string searchDO = "searchDO";
        }
        static readonly ActionParamsClass_Payments s_params_Payments = new ActionParamsClass_Payments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Payments PaymentsParams { get { return s_params_Payments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Payments
        {
            public readonly string transactionId = "transactionId";
        }
        static readonly ActionParamsClass_DownloadExcel s_params_DownloadExcel = new ActionParamsClass_DownloadExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DownloadExcel DownloadExcelParams { get { return s_params_DownloadExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DownloadExcel
        {
            public readonly string searchDO = "searchDO";
        }
        static readonly ActionParamsClass_DownloadPdf s_params_DownloadPdf = new ActionParamsClass_DownloadPdf();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DownloadPdf DownloadPdfParams { get { return s_params_DownloadPdf; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DownloadPdf
        {
            public readonly string searchDO = "searchDO";
        }
        static readonly ActionParamsClass_DownloadTransactionPaymentsExcel s_params_DownloadTransactionPaymentsExcel = new ActionParamsClass_DownloadTransactionPaymentsExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DownloadTransactionPaymentsExcel DownloadTransactionPaymentsExcelParams { get { return s_params_DownloadTransactionPaymentsExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DownloadTransactionPaymentsExcel
        {
            public readonly string transactionId = "transactionId";
        }
        static readonly ActionParamsClass_DownloadTransactionPaymentsPdf s_params_DownloadTransactionPaymentsPdf = new ActionParamsClass_DownloadTransactionPaymentsPdf();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DownloadTransactionPaymentsPdf DownloadTransactionPaymentsPdfParams { get { return s_params_DownloadTransactionPaymentsPdf; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DownloadTransactionPaymentsPdf
        {
            public readonly string transactionId = "transactionId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string List = "List";
                public readonly string Payments = "Payments";
            }
            public readonly string List = "~/Views/Transaction/List.cshtml";
            public readonly string Payments = "~/Views/Transaction/Payments.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_TransactionController : EPayments.Admin.Controllers.TransactionController
    {
        public T4MVC_TransactionController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, EPayments.Admin.Models.Transactions.TransactionSearchDO searchDO);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> List(EPayments.Admin.Models.Transactions.TransactionSearchDO searchDO)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchDO", searchDO);
            ListOverride(callInfo, searchDO);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void PaymentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int transactionId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Payments(int transactionId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Payments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "transactionId", transactionId);
            PaymentsOverride(callInfo, transactionId);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void DownloadExcelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, EPayments.Admin.Models.Transactions.TransactionSearchDO searchDO);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadExcel(EPayments.Admin.Models.Transactions.TransactionSearchDO searchDO)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchDO", searchDO);
            DownloadExcelOverride(callInfo, searchDO);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void DownloadPdfOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, EPayments.Admin.Models.Transactions.TransactionSearchDO searchDO);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadPdf(EPayments.Admin.Models.Transactions.TransactionSearchDO searchDO)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadPdf);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchDO", searchDO);
            DownloadPdfOverride(callInfo, searchDO);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void DownloadTransactionPaymentsExcelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int transactionId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadTransactionPaymentsExcel(int transactionId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadTransactionPaymentsExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "transactionId", transactionId);
            DownloadTransactionPaymentsExcelOverride(callInfo, transactionId);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void DownloadTransactionPaymentsPdfOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int transactionId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DownloadTransactionPaymentsPdf(int transactionId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadTransactionPaymentsPdf);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "transactionId", transactionId);
            DownloadTransactionPaymentsPdfOverride(callInfo, transactionId);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
