// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static EPayments.Admin.Controllers.AccountController Account = new EPayments.Admin.Controllers.T4MVC_AccountController();
    public static EPayments.Admin.Controllers.AdminUserController AdminUser = new EPayments.Admin.Controllers.T4MVC_AdminUserController();
    public static EPayments.Admin.Controllers.DepartmentController Department = new EPayments.Admin.Controllers.T4MVC_DepartmentController();
    public static EPayments.Admin.Controllers.DistributionController Distribution = new EPayments.Admin.Controllers.T4MVC_DistributionController();
    public static EPayments.Admin.Controllers.EserviceClientController EserviceClient = new EPayments.Admin.Controllers.T4MVC_EserviceClientController();
    public static EPayments.Admin.Controllers.HomeController Home = new EPayments.Admin.Controllers.T4MVC_HomeController();
    public static EPayments.Admin.Controllers.ObligationTypeController ObligationType = new EPayments.Admin.Controllers.T4MVC_ObligationTypeController();
    public static EPayments.Admin.Controllers.OldObligationsController OldObligations = new EPayments.Admin.Controllers.T4MVC_OldObligationsController();
    public static EPayments.Admin.Controllers.PaymentRequestController PaymentRequest = new EPayments.Admin.Controllers.T4MVC_PaymentRequestController();
    public static EPayments.Admin.Controllers.TransactionController Transaction = new EPayments.Admin.Controllers.T4MVC_TransactionController();
    public static EPayments.Admin.Controllers.UndistributedPaymentsController UndistributedPayments = new EPayments.Admin.Controllers.T4MVC_UndistributedPaymentsController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_FileResult : System.Web.Mvc.FileResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_FileResult(string area, string controller, string action, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    protected override void WriteFile(System.Web.HttpResponseBase response) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_confirmation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-confirmation.min.js") ? Url("bootstrap-confirmation.min.js") : Url("bootstrap-confirmation.js");
        public static readonly string bootstrap_datepicker_bg_min_js = Url("bootstrap-datepicker.bg.min.js");
        public static readonly string bootstrap_datepicker_min_js = Url("bootstrap-datepicker.min.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string clipboard_min_js = Url("clipboard.min.js");
        public static readonly string html5shiv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/html5shiv.min.js") ? Url("html5shiv.min.js") : Url("html5shiv.js");
        public static readonly string jquery_1_11_2_min_js = Url("jquery-1.11.2.min.js");
        public static readonly string jquery_easing_1_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.easing.1.3.min.js") ? Url("jquery.easing.1.3.min.js") : Url("jquery.easing.1.3.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        public static readonly string upx_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/upx.min.js") ? Url("upx.min.js") : Url("upx.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_datepicker3_standalone_min_css = Url("bootstrap-datepicker3.standalone.min.css");
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            public static readonly string fonts_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fonts.min.css") ? Url("fonts.min.css") : Url("fonts.css");
                 
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.min.css") ? Url("style.min.css") : Url("style.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            private const string URLPATH = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
            public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string administracia_png = Url("administracia.png");
            public static readonly string app_loading_gif = Url("app-loading.gif");
            public static readonly string footer_logos_png = Url("footer_logos.png");
            public static readonly string gerb_gif = Url("gerb.gif");
            public static readonly string gototop_png = Url("gototop.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icons {
                private const string URLPATH = "~/Content/images/icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _404_png = Url("404.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class actions {
                    private const string URLPATH = "~/Content/images/icons/actions";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string epay_png = Url("epay.png");
                    public static readonly string karta_png = Url("karta.png");
                    public static readonly string otkaji_png = Url("otkaji.png");
                    public static readonly string otorizacia_png = Url("otorizacia.png");
                    public static readonly string platejno_png = Url("platejno.png");
                }
            
                public static readonly string back_png = Url("back.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class browsers {
                    private const string URLPATH = "~/Content/images/icons/browsers";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string chrome_jpg = Url("chrome.jpg");
                    public static readonly string firefox_jpg = Url("firefox.jpg");
                    public static readonly string ie_jpg = Url("ie.jpg");
                    public static readonly string opera_jpg = Url("opera.jpg");
                    public static readonly string safari_jpg = Url("safari.jpg");
                }
            
                public static readonly string checkbox_tick_gif = Url("checkbox-tick.gif");
                public static readonly string chevron_down_png = Url("chevron-down.png");
                public static readonly string chevron_up_png = Url("chevron-up.png");
                public static readonly string copy_to_clipboard_png = Url("copy_to_clipboard.png");
                public static readonly string error_png = Url("error.png");
                public static readonly string faq_arrow_png = Url("faq-arrow.png");
                public static readonly string ico_download_png = Url("ico-download.png");
                public static readonly string ico_info_png = Url("ico_info.png");
                public static readonly string ico_pdf_jpg = Url("ico_pdf.jpg");
                public static readonly string ico_print_gif = Url("ico_print.gif");
                public static readonly string ico_success_png = Url("ico_success.png");
                public static readonly string ico_tree_gif = Url("ico_tree.gif");
                public static readonly string logout_png = Url("logout.png");
                public static readonly string search_gif = Url("search.gif");
                public static readonly string search_png = Url("search.png");
                public static readonly string settings_png = Url("settings.png");
                public static readonly string success_png = Url("success.png");
                public static readonly string tick_png = Url("tick.png");
                public static readonly string warning_png = Url("warning.png");
                public static readonly string xls_png = Url("xls.png");
            }
        
            public static readonly string login_jpg = Url("login.jpg");
            public static readonly string under_construction_png = Url("under-construction.png");
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static class Assets
            {
                public const string bootstrap_confirmation_js = "~/Scripts/bootstrap-confirmation.js"; 
                public const string bootstrap_datepicker_bg_min_js = "~/Scripts/bootstrap-datepicker.bg.min.js"; 
                public const string bootstrap_datepicker_min_js = "~/Scripts/bootstrap-datepicker.min.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string clipboard_min_js = "~/Scripts/clipboard.min.js"; 
                public const string html5shiv_js = "~/Scripts/html5shiv.js"; 
                public const string jquery_1_11_2_min_js = "~/Scripts/jquery-1.11.2.min.js"; 
                public const string jquery_easing_1_3_js = "~/Scripts/jquery.easing.1.3.js"; 
                public const string modernizr_2_6_2_js = "~/Scripts/modernizr-2.6.2.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
                public const string upx_js = "~/Scripts/upx.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class css 
            {
                public static class Assets
                {
                    public const string bootstrap_datepicker3_standalone_min_css = "~/Content/css/bootstrap-datepicker3.standalone.min.css";
                    public const string bootstrap_min_css = "~/Content/css/bootstrap.min.css";
                    public const string fonts_css = "~/Content/css/fonts.css";
                    public const string style_css = "~/Content/css/style.css";
                }
            }
            public static partial class fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class images 
            {
                public static partial class icons 
                {
                    public static partial class actions 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class browsers 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


