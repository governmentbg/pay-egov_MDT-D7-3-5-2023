/*
Deployment script for EPayments

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/

USE [$(dbName)]
GO

/*
Table [dbo].[TestTransactionResults] is being dropped.  Deployment will halt if the table contains data.
*/

IF EXISTS (select top 1 1 from [dbo].[TestTransactionResults])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[trForInsertPaymentRequest]...';


GO
DROP TRIGGER [dbo].[trForInsertPaymentRequest];


GO
PRINT N'Dropping [dbo].[trForUpdatePaymentRequest]...';


GO
DROP TRIGGER [dbo].[trForUpdatePaymentRequest];


GO
PRINT N'Dropping [dbo].[FK_EserviceAdminUserBankAccounts_EserviceAdminUsers]...';


GO
ALTER TABLE [dbo].[EserviceAdminUserBankAccounts] DROP CONSTRAINT [FK_EserviceAdminUserBankAccounts_EserviceAdminUsers];


GO
PRINT N'Dropping [dbo].[FK_EserviceAdminUsers_EserviceClients]...';


GO
ALTER TABLE [dbo].[EserviceAdminUsers] DROP CONSTRAINT [FK_EserviceAdminUsers_EserviceClients];


GO
PRINT N'Dropping [dbo].[FK_EserviceClients_VposClients]...';


GO
ALTER TABLE [dbo].[EserviceClients] DROP CONSTRAINT [FK_EserviceClients_VposClients];


GO
PRINT N'Dropping [dbo].[FK_EserviceClients_Departments]...';


GO
ALTER TABLE [dbo].[EserviceClients] DROP CONSTRAINT [FK_EserviceClients_Departments];


GO
PRINT N'Dropping [dbo].[FK_PaymentRequests_EserviceClients]...';


GO
ALTER TABLE [dbo].[PaymentRequests] DROP CONSTRAINT [FK_PaymentRequests_EserviceClients];


GO
PRINT N'Dropping [dbo].[FK_EserviceNotifications_EserviceClients]...';


GO
ALTER TABLE [dbo].[EserviceNotifications] DROP CONSTRAINT [FK_EserviceNotifications_EserviceClients];


GO
PRINT N'Dropping [dbo].[FK_TransactionRecords_PaymentRequests]...';


GO
ALTER TABLE [dbo].[TransactionRecords] DROP CONSTRAINT [FK_TransactionRecords_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_VposResults_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposResults] DROP CONSTRAINT [FK_VposResults_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_VposBoricaRequests_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposBoricaRequests] DROP CONSTRAINT [FK_VposBoricaRequests_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_VposFiBankRequests_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposFiBankRequests] DROP CONSTRAINT [FK_VposFiBankRequests_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_VposEpayRequests_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposEpayRequests] DROP CONSTRAINT [FK_VposEpayRequests_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_VposDskEcommRequests_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposDskEcommRequests] DROP CONSTRAINT [FK_VposDskEcommRequests_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_PaymentRequests_VposResults]...';


GO
ALTER TABLE [dbo].[PaymentRequests] DROP CONSTRAINT [FK_PaymentRequests_VposResults];


GO
PRINT N'Dropping [dbo].[FK_PaymentRequests_PaymentRequestXmls]...';


GO
ALTER TABLE [dbo].[PaymentRequests] DROP CONSTRAINT [FK_PaymentRequests_PaymentRequestXmls];


GO
PRINT N'Dropping [dbo].[FK_PaymentRequests_PaymentRequestStatuses]...';


GO
ALTER TABLE [dbo].[PaymentRequests] DROP CONSTRAINT [FK_PaymentRequests_PaymentRequestStatuses];


GO
PRINT N'Dropping [dbo].[FK_PaymentRequests_PaidStatusPaymentMethods]...';


GO
ALTER TABLE [dbo].[PaymentRequests] DROP CONSTRAINT [FK_PaymentRequests_PaidStatusPaymentMethods];


GO
PRINT N'Dropping [dbo].[FK_PaymentRequests_UinTypes]...';


GO
ALTER TABLE [dbo].[PaymentRequests] DROP CONSTRAINT [FK_PaymentRequests_UinTypes];


GO
PRINT N'Dropping [dbo].[FK_PaymentRequestStatusLogs_PaymentRequests]...';


GO
ALTER TABLE [dbo].[PaymentRequestStatusLogs] DROP CONSTRAINT [FK_PaymentRequestStatusLogs_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_EbankingAccessLogs_PaymentRequests]...';


GO
ALTER TABLE [dbo].[EbankingAccessLogs] DROP CONSTRAINT [FK_EbankingAccessLogs_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_EserviceNotifications_PaymentRequests]...';


GO
ALTER TABLE [dbo].[EserviceNotifications] DROP CONSTRAINT [FK_EserviceNotifications_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_EventRegisterNotifications_PaymentRequests]...';


GO
ALTER TABLE [dbo].[EventRegisterNotifications] DROP CONSTRAINT [FK_EventRegisterNotifications_PaymentRequests];


GO
PRINT N'Dropping [dbo].[FK_Users_Certificates]...';


GO
ALTER TABLE [dbo].[Users] DROP CONSTRAINT [FK_Users_Certificates];


GO
PRINT N'Dropping [dbo].[FK_Users_DisclaimerTemplates]...';


GO
ALTER TABLE [dbo].[Users] DROP CONSTRAINT [FK_Users_DisclaimerTemplates];


GO
PRINT N'Dropping [dbo].[FK_Disclaimers_Users]...';


GO
ALTER TABLE [dbo].[Disclaimers] DROP CONSTRAINT [FK_Disclaimers_Users];


GO
PRINT N'Dropping [dbo].[FK_VposFiBankRequests_VposRedirects]...';


GO
ALTER TABLE [dbo].[VposFiBankRequests] DROP CONSTRAINT [FK_VposFiBankRequests_VposRedirects];


GO
PRINT N'Dropping [dbo].[TestTransactionResults]...';


GO
DROP TABLE [dbo].[TestTransactionResults];


GO
PRINT N'Starting rebuilding table [dbo].[EserviceAdminUsers]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EserviceAdminUsers] (
    [EserviceAdminUserId]             INT            IDENTITY (1, 1) NOT NULL,
    [DepartmentId]                    INT            NULL,
    [Username]                        NVARCHAR (100) NOT NULL,
    [PasswordHash]                    NVARCHAR (MAX) NOT NULL,
    [PasswordSalt]                    NVARCHAR (MAX) NOT NULL,
    [IpAddressesForAccess]            NVARCHAR (MAX) NULL,
    [Name]                            NVARCHAR (100) NOT NULL,
    [Email]                           NVARCHAR (100) NULL,
    [InsufficientAmountNotifications] BIT            NOT NULL,
    [OverpaidAmountNotifications]     BIT            NOT NULL,
    [ReferencedNotifications]         BIT            NOT NULL,
    [NotReferencedNotifications]      BIT            NOT NULL,
    [IsActive]                        BIT            NOT NULL,
    [ReferringEserviceClientId]       INT            NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EserviceAdminUsers1] PRIMARY KEY CLUSTERED ([EserviceAdminUserId] ASC),
    UNIQUE NONCLUSTERED ([Username] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EserviceAdminUsers])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EserviceAdminUsers] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EserviceAdminUsers] ([EserviceAdminUserId], [Username], [PasswordHash], [PasswordSalt], [IpAddressesForAccess], [Name], [Email], [InsufficientAmountNotifications], [OverpaidAmountNotifications], [ReferencedNotifications], [NotReferencedNotifications], [IsActive], [ReferringEserviceClientId])
        SELECT   [EserviceAdminUserId],
                 [Username],
                 [PasswordHash],
                 [PasswordSalt],
                 [IpAddressesForAccess],
                 [Name],
                 [Email],
                 [InsufficientAmountNotifications],
                 [OverpaidAmountNotifications],
                 [ReferencedNotifications],
                 [NotReferencedNotifications],
                 [IsActive],
                 [ReferringEserviceClientId]
        FROM     [dbo].[EserviceAdminUsers]
        ORDER BY [EserviceAdminUserId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EserviceAdminUsers] OFF;
    END

DROP TABLE [dbo].[EserviceAdminUsers];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EserviceAdminUsers]', N'EserviceAdminUsers';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EserviceAdminUsers1]', N'PK_EserviceAdminUsers', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EserviceClients]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EserviceClients] (
    [EserviceClientId]                         INT              IDENTITY (1, 1) NOT NULL,
    [Gid]                                      UNIQUEIDENTIFIER NOT NULL,
    [Alias]                                    NVARCHAR (100)   NOT NULL,
    [AisName]                                  NVARCHAR (100)   NOT NULL,
    [ServiceName]                              NVARCHAR (200)   NULL,
    [ServiceDescription]                       NVARCHAR (MAX)   NULL,
    [AccountBank]                              NVARCHAR (100)   NOT NULL,
    [AccountBIC]                               NVARCHAR (50)    NOT NULL,
    [AccountIBAN]                              NVARCHAR (50)    NOT NULL,
    [ClientId]                                 NVARCHAR (100)   NOT NULL,
    [SecretKey]                                NVARCHAR (200)   NOT NULL,
    [VposClientId]                             INT              NULL,
    [DskVposMerchantId]                        NVARCHAR (100)   NULL,
    [DskVposMerchantPassword]                  NVARCHAR (MAX)   NULL,
    [IsAuthPassAuthorized]                     BIT              NOT NULL,
    [IsActive]                                 BIT              NOT NULL,
    [BoricaVposTerminalId]                     NVARCHAR (100)   NULL,
    [BoricaVposMerchantId]                     NVARCHAR (100)   NULL,
    [BoricaVposRequestSignCertFileName]        NVARCHAR (MAX)   NULL,
    [BoricaVposRequestSignCertPassword]        NVARCHAR (MAX)   NULL,
    [BoricaVposRequestSignCertValidTo]         DATETIME2 (7)    NULL,
    [BoricaVposRequestSignCertExpMailSend]     BIT              NULL,
    [DepartmentId]                             INT              NULL,
    [FiBankVposAccessKeystoreFilename]         NVARCHAR (MAX)   NULL,
    [FiBankVposAccessKeystorePassword]         NVARCHAR (MAX)   NULL,
    [IsEpayVposEnabled]                        BIT              NOT NULL,
    [BoricaVposRequestSignCertExpHideAdminMsg] BIT              NULL,
    [BoricaEtLogCertificateName]               NVARCHAR (MAX)   NULL,
    [BoricaEtLogCertificatePassword]           NVARCHAR (MAX)   NULL,
    [BoricaEtLogCertificateValidTo]            DATETIME2 (7)    NULL,
    [BoricaEtLogUsername]                      NVARCHAR (MAX)   NULL,
    [BoricaEtLogPassword]                      NVARCHAR (MAX)   NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EserviceClients1] PRIMARY KEY CLUSTERED ([EserviceClientId] ASC),
    UNIQUE NONCLUSTERED ([Gid] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EserviceClients])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EserviceClients] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EserviceClients] ([EserviceClientId], [Gid], [Alias], [AisName], [ServiceName], [ServiceDescription], [DepartmentId], [AccountBank], [AccountBIC], [AccountIBAN], [ClientId], [SecretKey], [VposClientId], [DskVposMerchantId], [DskVposMerchantPassword], [BoricaVposTerminalId], [BoricaVposMerchantId], [BoricaVposRequestSignCertFileName], [BoricaVposRequestSignCertPassword], [BoricaVposRequestSignCertValidTo], [BoricaVposRequestSignCertExpMailSend], [BoricaVposRequestSignCertExpHideAdminMsg], [FiBankVposAccessKeystoreFilename], [FiBankVposAccessKeystorePassword], [IsEpayVposEnabled], [IsAuthPassAuthorized], [IsActive])
        SELECT   [EserviceClientId],
                 [Gid],
                 [Alias],
                 [AisName],
                 [ServiceName],
                 [ServiceDescription],
                 [DepartmentId],
                 [AccountBank],
                 [AccountBIC],
                 [AccountIBAN],
                 [ClientId],
                 [SecretKey],
                 [VposClientId],
                 [DskVposMerchantId],
                 [DskVposMerchantPassword],
                 [BoricaVposTerminalId],
                 [BoricaVposMerchantId],
                 [BoricaVposRequestSignCertFileName],
                 [BoricaVposRequestSignCertPassword],
                 [BoricaVposRequestSignCertValidTo],
                 [BoricaVposRequestSignCertExpMailSend],
                 [BoricaVposRequestSignCertExpHideAdminMsg],
                 [FiBankVposAccessKeystoreFilename],
                 [FiBankVposAccessKeystorePassword],
                 [IsEpayVposEnabled],
                 [IsAuthPassAuthorized],
                 [IsActive]
        FROM     [dbo].[EserviceClients]
        ORDER BY [EserviceClientId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EserviceClients] OFF;
    END

DROP TABLE [dbo].[EserviceClients];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EserviceClients]', N'EserviceClients';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EserviceClients1]', N'PK_EserviceClients', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PaymentRequests]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PaymentRequests] (
    [PaymentRequestId]                     INT              IDENTITY (1, 1) NOT NULL,
    [Gid]                                  UNIQUEIDENTIFIER NOT NULL,
    [PaymentRequestXmlId]                  INT              NOT NULL,
    [EserviceClientId]                     INT              NOT NULL,
    [IsPaymentMultiple]                    BIT              NOT NULL,
    [ServiceProviderName]                  NVARCHAR (MAX)   NOT NULL,
    [ServiceProviderBank]                  NVARCHAR (100)   NOT NULL,
    [ServiceProviderBIC]                   NVARCHAR (50)    NOT NULL,
    [ServiceProviderIBAN]                  NVARCHAR (50)    NOT NULL,
    [Currency]                             NVARCHAR (10)    NOT NULL,
    [PaymentTypeCode]                      NVARCHAR (10)    NULL,
    [PaymentAmount]                        DECIMAL (18, 4)  NOT NULL,
    [PaymentReason]                        NVARCHAR (200)   NOT NULL,
    [ApplicantUinTypeId]                   INT              NOT NULL,
    [ApplicantUin]                         NVARCHAR (50)    NOT NULL,
    [ApplicantName]                        NVARCHAR (MAX)   NOT NULL,
    [PaymentReferenceType]                 NVARCHAR (50)    NULL,
    [PaymentReferenceNumber]               NVARCHAR (50)    NOT NULL,
    [PaymentReferenceDate]                 DATETIME2 (7)    NOT NULL,
    [ExpirationDate]                       DATETIME2 (7)    NOT NULL,
    [AdditionalInformation]                NVARCHAR (MAX)   NULL,
    [AdministrativeServiceUri]             NVARCHAR (100)   NULL,
    [AdministrativeServiceSupplierUri]     NVARCHAR (100)   NULL,
    [AdministrativeServiceNotificationURL] NVARCHAR (MAX)   NULL,
    [PaymentRequestIdentifier]             NVARCHAR (50)    NOT NULL,
    [PaymentRequestAccessCode]             NVARCHAR (10)    NULL,
    [IsTempRequest]                        BIT              NOT NULL,
    [IsVposAuthorized]                     BIT              NOT NULL,
    [VposResultId]                         INT              NULL,
    [VposAuthorizationId]                  NVARCHAR (MAX)   NULL,
    [PaymentRequestStatusId]               INT              NOT NULL,
    [PaymentRequestStatusChangeTime]       DATETIME2 (7)    NOT NULL,
    [CreateDate]                           DATETIME2 (7)    NOT NULL,
    [PaidStatusPaymentMethodId]            INT              NULL,
    [PaidStatusPaymentMethodDescription]   NVARCHAR (MAX)   NULL,
    [AisPaymentId]                         NVARCHAR (MAX)   NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PaymentRequests1] PRIMARY KEY CLUSTERED ([PaymentRequestId] ASC),
    UNIQUE NONCLUSTERED ([PaymentRequestIdentifier] ASC),
    UNIQUE NONCLUSTERED ([Gid] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PaymentRequests])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PaymentRequests] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PaymentRequests] ([PaymentRequestId], [Gid], [PaymentRequestXmlId], [EserviceClientId], [IsPaymentMultiple], [ServiceProviderName], [ServiceProviderBank], [ServiceProviderBIC], [ServiceProviderIBAN], [Currency], [PaymentTypeCode], [PaymentAmount], [PaymentReason], [ApplicantUinTypeId], [ApplicantUin], [ApplicantName], [PaymentReferenceType], [PaymentReferenceNumber], [PaymentReferenceDate], [ExpirationDate], [AdditionalInformation], [AdministrativeServiceUri], [AdministrativeServiceSupplierUri], [AdministrativeServiceNotificationURL], [AisPaymentId], [PaymentRequestIdentifier], [PaymentRequestAccessCode], [IsTempRequest], [IsVposAuthorized], [VposResultId], [VposAuthorizationId], [PaymentRequestStatusId], [PaidStatusPaymentMethodId], [PaidStatusPaymentMethodDescription], [PaymentRequestStatusChangeTime], [CreateDate])
        SELECT   [PaymentRequestId],
                 [Gid],
                 [PaymentRequestXmlId],
                 [EserviceClientId],
                 [IsPaymentMultiple],
                 [ServiceProviderName],
                 [ServiceProviderBank],
                 [ServiceProviderBIC],
                 [ServiceProviderIBAN],
                 [Currency],
                 [PaymentTypeCode],
                 [PaymentAmount],
                 [PaymentReason],
                 [ApplicantUinTypeId],
                 [ApplicantUin],
                 [ApplicantName],
                 [PaymentReferenceType],
                 [PaymentReferenceNumber],
                 [PaymentReferenceDate],
                 [ExpirationDate],
                 [AdditionalInformation],
                 [AdministrativeServiceUri],
                 [AdministrativeServiceSupplierUri],
                 [AdministrativeServiceNotificationURL],
                 [AisPaymentId],
                 [PaymentRequestIdentifier],
                 [PaymentRequestAccessCode],
                 [IsTempRequest],
                 [IsVposAuthorized],
                 [VposResultId],
                 [VposAuthorizationId],
                 [PaymentRequestStatusId],
                 [PaidStatusPaymentMethodId],
                 [PaidStatusPaymentMethodDescription],
                 [PaymentRequestStatusChangeTime],
                 [CreateDate]
        FROM     [dbo].[PaymentRequests]
        ORDER BY [PaymentRequestId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PaymentRequests] OFF;
    END

DROP TABLE [dbo].[PaymentRequests];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PaymentRequests]', N'PaymentRequests';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PaymentRequests1]', N'PK_PaymentRequests', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Users]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Users] (
    [UserId]                   INT            IDENTITY (1, 1) NOT NULL,
    [Egn]                      NVARCHAR (10)  NOT NULL,
    [Email]                    NVARCHAR (100) NULL,
    [RequestNotifications]     BIT            NOT NULL,
    [StatusNotifications]      BIT            NOT NULL,
    [LastCertificateId]        INT            NULL,
    [LastDisclaimerTemplateId] INT            NULL,
    [AccessCodeNotifications]  BIT            NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Users1] PRIMARY KEY CLUSTERED ([UserId] ASC),
    UNIQUE NONCLUSTERED ([Egn] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UK_Users_Egn1] UNIQUE NONCLUSTERED ([Egn] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Users])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Users] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Users] ([UserId], [Egn], [Email], [RequestNotifications], [StatusNotifications], [AccessCodeNotifications], [LastCertificateId], [LastDisclaimerTemplateId])
        SELECT   [UserId],
                 [Egn],
                 [Email],
                 [RequestNotifications],
                 [StatusNotifications],
                 [AccessCodeNotifications],
                 [LastCertificateId],
                 [LastDisclaimerTemplateId]
        FROM     [dbo].[Users]
        ORDER BY [UserId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Users] OFF;
    END

DROP TABLE [dbo].[Users];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Users]', N'Users';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Users1]', N'PK_Users', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UK_Users_Egn1]', N'UK_Users_Egn', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[VposFiBankRequests]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_VposFiBankRequests] (
    [VposFiBankRequestId]                INT            IDENTITY (1, 1) NOT NULL,
    [PaymentRequestId]                   INT            NOT NULL,
    [VposRedirectId]                     INT            NULL,
    [TransactionId]                      NVARCHAR (100) NULL,
    [IsVposPostCallbackReceived]         BIT            NOT NULL,
    [VposPostCallbackReceiveDate]        DATETIME       NULL,
    [TransactionResult]                  NVARCHAR (MAX) NULL,
    [TransactionResultReceiveDate]       DATETIME       NULL,
    [IsPaymentSuccessful]                BIT            NULL,
    [CreateDate]                         DATETIME       NOT NULL,
    [ResultStatus]                       INT            NOT NULL,
    [JobCheckResultFailedAttempts]       INT            NOT NULL,
    [JobCheckResultFailedAttemptsErrors] NVARCHAR (MAX) NULL,
    [JobLastCheckResultDate]             DATETIME       NULL,
    [JobLastCheckResultTransactionInfo]  NVARCHAR (MAX) NULL,
    [ClientIpAddress]                    NVARCHAR (50)  NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_VposFiBankRequests1] PRIMARY KEY CLUSTERED ([VposFiBankRequestId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[VposFiBankRequests])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_VposFiBankRequests] ON;
        INSERT INTO [dbo].[tmp_ms_xx_VposFiBankRequests] ([VposFiBankRequestId], [PaymentRequestId], [VposRedirectId], [ClientIpAddress], [TransactionId], [IsVposPostCallbackReceived], [VposPostCallbackReceiveDate], [TransactionResult], [TransactionResultReceiveDate], [IsPaymentSuccessful], [ResultStatus], [JobCheckResultFailedAttempts], [JobCheckResultFailedAttemptsErrors], [JobLastCheckResultDate], [JobLastCheckResultTransactionInfo], [CreateDate])
        SELECT   [VposFiBankRequestId],
                 [PaymentRequestId],
                 [VposRedirectId],
                 [ClientIpAddress],
                 [TransactionId],
                 [IsVposPostCallbackReceived],
                 [VposPostCallbackReceiveDate],
                 [TransactionResult],
                 [TransactionResultReceiveDate],
                 [IsPaymentSuccessful],
                 [ResultStatus],
                 [JobCheckResultFailedAttempts],
                 [JobCheckResultFailedAttemptsErrors],
                 [JobLastCheckResultDate],
                 [JobLastCheckResultTransactionInfo],
                 [CreateDate]
        FROM     [dbo].[VposFiBankRequests]
        ORDER BY [VposFiBankRequestId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_VposFiBankRequests] OFF;
    END

DROP TABLE [dbo].[VposFiBankRequests];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_VposFiBankRequests]', N'VposFiBankRequests';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_VposFiBankRequests1]', N'PK_VposFiBankRequests', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[VposFiBankRequests].[IX_VposFiBankRequests_ResultStatus_CreateDate_JobCheckResultFailedAttempts_JobLastCheckResultDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_VposFiBankRequests_ResultStatus_CreateDate_JobCheckResultFailedAttempts_JobLastCheckResultDate]
    ON [dbo].[VposFiBankRequests]([ResultStatus] ASC, [CreateDate] ASC, [JobCheckResultFailedAttempts] ASC, [JobLastCheckResultDate] ASC);


GO
PRINT N'Creating [dbo].[VposFiBankRequests].[IX_VposFiBankRequests_TransactionId]...';


GO
CREATE NONCLUSTERED INDEX [IX_VposFiBankRequests_TransactionId]
    ON [dbo].[VposFiBankRequests]([TransactionId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[VposResults]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_VposResults] (
    [VposResultId]            INT              IDENTITY (1, 1) NOT NULL,
    [Gid]                     UNIQUEIDENTIFIER NOT NULL,
    [PaymentRequestId]        INT              NOT NULL,
    [PostData]                NVARCHAR (MAX)   NOT NULL,
    [PostUrl]                 NVARCHAR (MAX)   NOT NULL,
    [IsPaymentSuccessfull]    BIT              NOT NULL,
    [RequestDate]             DATETIME         NOT NULL,
    [IsPaymentCanceledByUser] BIT              NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_VposResults1] PRIMARY KEY CLUSTERED ([VposResultId] ASC),
    UNIQUE NONCLUSTERED ([Gid] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[VposResults])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_VposResults] ON;
        INSERT INTO [dbo].[tmp_ms_xx_VposResults] ([VposResultId], [Gid], [PaymentRequestId], [PostData], [PostUrl], [IsPaymentSuccessfull], [IsPaymentCanceledByUser], [RequestDate])
        SELECT   [VposResultId],
                 [Gid],
                 [PaymentRequestId],
                 [PostData],
                 [PostUrl],
                 [IsPaymentSuccessfull],
                 [IsPaymentCanceledByUser],
                 [RequestDate]
        FROM     [dbo].[VposResults]
        ORDER BY [VposResultId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_VposResults] OFF;
    END

DROP TABLE [dbo].[VposResults];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_VposResults]', N'VposResults';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_VposResults1]', N'PK_VposResults', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_EserviceAdminUserBankAccounts_EserviceAdminUsers]...';


GO
ALTER TABLE [dbo].[EserviceAdminUserBankAccounts] WITH NOCHECK
    ADD CONSTRAINT [FK_EserviceAdminUserBankAccounts_EserviceAdminUsers] FOREIGN KEY ([EserviceAdminUserId]) REFERENCES [dbo].[EserviceAdminUsers] ([EserviceAdminUserId]);


GO
PRINT N'Creating unnamed constraint on [dbo].[EserviceAdminUsers]...';


GO
ALTER TABLE [dbo].[EserviceAdminUsers] WITH NOCHECK
    ADD FOREIGN KEY ([ReferringEserviceClientId]) REFERENCES [dbo].[EserviceClients] ([EserviceClientId]);


GO
PRINT N'Creating [dbo].[FK_EserviceAdminUsers_Departments]...';


GO
ALTER TABLE [dbo].[EserviceAdminUsers] WITH NOCHECK
    ADD CONSTRAINT [FK_EserviceAdminUsers_Departments] FOREIGN KEY ([DepartmentId]) REFERENCES [dbo].[Departments] ([DepartmentId]);


GO
PRINT N'Creating [dbo].[FK_EserviceAdminUsers_EserviceAdminUsers]...';


GO
ALTER TABLE [dbo].[EserviceAdminUsers] WITH NOCHECK
    ADD CONSTRAINT [FK_EserviceAdminUsers_EserviceAdminUsers] FOREIGN KEY ([EserviceAdminUserId]) REFERENCES [dbo].[EserviceAdminUsers] ([EserviceAdminUserId]);


GO
PRINT N'Creating [dbo].[FK_EserviceClients_VposClients]...';


GO
ALTER TABLE [dbo].[EserviceClients] WITH NOCHECK
    ADD CONSTRAINT [FK_EserviceClients_VposClients] FOREIGN KEY ([VposClientId]) REFERENCES [dbo].[VposClients] ([VposClientId]);


GO
PRINT N'Creating [dbo].[FK_EserviceClients_Departments]...';


GO
ALTER TABLE [dbo].[EserviceClients] WITH NOCHECK
    ADD CONSTRAINT [FK_EserviceClients_Departments] FOREIGN KEY ([DepartmentId]) REFERENCES [dbo].[Departments] ([DepartmentId]);


GO
PRINT N'Creating [dbo].[FK_PaymentRequests_EserviceClients]...';


GO
ALTER TABLE [dbo].[PaymentRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_PaymentRequests_EserviceClients] FOREIGN KEY ([EserviceClientId]) REFERENCES [dbo].[EserviceClients] ([EserviceClientId]);


GO
PRINT N'Creating [dbo].[FK_EserviceNotifications_EserviceClients]...';


GO
ALTER TABLE [dbo].[EserviceNotifications] WITH NOCHECK
    ADD CONSTRAINT [FK_EserviceNotifications_EserviceClients] FOREIGN KEY ([EserviceClientId]) REFERENCES [dbo].[EserviceClients] ([EserviceClientId]);


GO
PRINT N'Creating [dbo].[FK_TransactionRecords_PaymentRequests]...';


GO
ALTER TABLE [dbo].[TransactionRecords] WITH NOCHECK
    ADD CONSTRAINT [FK_TransactionRecords_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_VposResults_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposResults] WITH NOCHECK
    ADD CONSTRAINT [FK_VposResults_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_VposBoricaRequests_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposBoricaRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_VposBoricaRequests_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_VposFiBankRequests_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposFiBankRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_VposFiBankRequests_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_VposEpayRequests_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposEpayRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_VposEpayRequests_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_VposDskEcommRequests_PaymentRequests]...';


GO
ALTER TABLE [dbo].[VposDskEcommRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_VposDskEcommRequests_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_PaymentRequests_VposResults]...';


GO
ALTER TABLE [dbo].[PaymentRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_PaymentRequests_VposResults] FOREIGN KEY ([VposResultId]) REFERENCES [dbo].[VposResults] ([VposResultId]);


GO
PRINT N'Creating [dbo].[FK_PaymentRequests_PaymentRequestXmls]...';


GO
ALTER TABLE [dbo].[PaymentRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_PaymentRequests_PaymentRequestXmls] FOREIGN KEY ([PaymentRequestXmlId]) REFERENCES [dbo].[PaymentRequestXmls] ([PaymentRequestXmlId]);


GO
PRINT N'Creating [dbo].[FK_PaymentRequests_PaymentRequestStatuses]...';


GO
ALTER TABLE [dbo].[PaymentRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_PaymentRequests_PaymentRequestStatuses] FOREIGN KEY ([PaymentRequestStatusId]) REFERENCES [dbo].[PaymentRequestStatuses] ([PaymentRequestStatusId]);


GO
PRINT N'Creating [dbo].[FK_PaymentRequests_PaidStatusPaymentMethods]...';


GO
ALTER TABLE [dbo].[PaymentRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_PaymentRequests_PaidStatusPaymentMethods] FOREIGN KEY ([PaidStatusPaymentMethodId]) REFERENCES [dbo].[PaidStatusPaymentMethods] ([PaidStatusPaymentMethodId]);


GO
PRINT N'Creating [dbo].[FK_PaymentRequests_UinTypes]...';


GO
ALTER TABLE [dbo].[PaymentRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_PaymentRequests_UinTypes] FOREIGN KEY ([ApplicantUinTypeId]) REFERENCES [dbo].[UinTypes] ([UinTypeId]);


GO
PRINT N'Creating [dbo].[FK_PaymentRequestStatusLogs_PaymentRequests]...';


GO
ALTER TABLE [dbo].[PaymentRequestStatusLogs] WITH NOCHECK
    ADD CONSTRAINT [FK_PaymentRequestStatusLogs_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_EbankingAccessLogs_PaymentRequests]...';


GO
ALTER TABLE [dbo].[EbankingAccessLogs] WITH NOCHECK
    ADD CONSTRAINT [FK_EbankingAccessLogs_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_EserviceNotifications_PaymentRequests]...';


GO
ALTER TABLE [dbo].[EserviceNotifications] WITH NOCHECK
    ADD CONSTRAINT [FK_EserviceNotifications_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_EventRegisterNotifications_PaymentRequests]...';


GO
ALTER TABLE [dbo].[EventRegisterNotifications] WITH NOCHECK
    ADD CONSTRAINT [FK_EventRegisterNotifications_PaymentRequests] FOREIGN KEY ([PaymentRequestId]) REFERENCES [dbo].[PaymentRequests] ([PaymentRequestId]);


GO
PRINT N'Creating [dbo].[FK_Users_Certificates]...';


GO
ALTER TABLE [dbo].[Users] WITH NOCHECK
    ADD CONSTRAINT [FK_Users_Certificates] FOREIGN KEY ([LastCertificateId]) REFERENCES [dbo].[Certificates] ([CertificateId]);


GO
PRINT N'Creating [dbo].[FK_Users_DisclaimerTemplates]...';


GO
ALTER TABLE [dbo].[Users] WITH NOCHECK
    ADD CONSTRAINT [FK_Users_DisclaimerTemplates] FOREIGN KEY ([LastDisclaimerTemplateId]) REFERENCES [dbo].[DisclaimerTemplates] ([DisclaimerTemplateId]);


GO
PRINT N'Creating [dbo].[FK_Disclaimers_Users]...';


GO
ALTER TABLE [dbo].[Disclaimers] WITH NOCHECK
    ADD CONSTRAINT [FK_Disclaimers_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_VposFiBankRequests_VposRedirects]...';


GO
ALTER TABLE [dbo].[VposFiBankRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_VposFiBankRequests_VposRedirects] FOREIGN KEY ([VposRedirectId]) REFERENCES [dbo].[VposRedirects] ([VposRedirectId]);


GO
PRINT N'Creating [dbo].[vwDepartmentAisClients]...';


GO

CREATE VIEW [dbo].[vwDepartmentAisClients]
AS  
select 
ec.EserviceClientId,
d.DepartmentId,
d.Name as DepartmentName,
ec.AisName,
ec.ClientId,
ec.SecretKey,
ec.AccountBank as ServiceProviderBank,
ec.AccountBIC as serviceProviderBIC,
ec.AccountIBAN as serviceProviderIBAN
from EserviceClients ec
inner join Departments d on  d.DepartmentId=ec.DepartmentId
GO
PRINT N'Checking existing data against newly created constraints';


GO

USE [$(dbName)]
GO

ALTER TABLE [dbo].[EserviceAdminUserBankAccounts] WITH CHECK CHECK CONSTRAINT [FK_EserviceAdminUserBankAccounts_EserviceAdminUsers];

ALTER TABLE [dbo].[EserviceClients] WITH CHECK CHECK CONSTRAINT [FK_EserviceClients_VposClients];

ALTER TABLE [dbo].[EserviceClients] WITH CHECK CHECK CONSTRAINT [FK_EserviceClients_Departments];

ALTER TABLE [dbo].[PaymentRequests] WITH CHECK CHECK CONSTRAINT [FK_PaymentRequests_EserviceClients];

ALTER TABLE [dbo].[EserviceNotifications] WITH CHECK CHECK CONSTRAINT [FK_EserviceNotifications_EserviceClients];

ALTER TABLE [dbo].[TransactionRecords] WITH CHECK CHECK CONSTRAINT [FK_TransactionRecords_PaymentRequests];

ALTER TABLE [dbo].[VposResults] WITH CHECK CHECK CONSTRAINT [FK_VposResults_PaymentRequests];

ALTER TABLE [dbo].[VposBoricaRequests] WITH CHECK CHECK CONSTRAINT [FK_VposBoricaRequests_PaymentRequests];

ALTER TABLE [dbo].[VposFiBankRequests] WITH CHECK CHECK CONSTRAINT [FK_VposFiBankRequests_PaymentRequests];

ALTER TABLE [dbo].[VposEpayRequests] WITH CHECK CHECK CONSTRAINT [FK_VposEpayRequests_PaymentRequests];

ALTER TABLE [dbo].[VposDskEcommRequests] WITH CHECK CHECK CONSTRAINT [FK_VposDskEcommRequests_PaymentRequests];

ALTER TABLE [dbo].[PaymentRequests] WITH CHECK CHECK CONSTRAINT [FK_PaymentRequests_VposResults];

ALTER TABLE [dbo].[PaymentRequests] WITH CHECK CHECK CONSTRAINT [FK_PaymentRequests_PaymentRequestXmls];

ALTER TABLE [dbo].[PaymentRequests] WITH CHECK CHECK CONSTRAINT [FK_PaymentRequests_PaymentRequestStatuses];

ALTER TABLE [dbo].[PaymentRequests] WITH CHECK CHECK CONSTRAINT [FK_PaymentRequests_PaidStatusPaymentMethods];

ALTER TABLE [dbo].[PaymentRequests] WITH CHECK CHECK CONSTRAINT [FK_PaymentRequests_UinTypes];

ALTER TABLE [dbo].[PaymentRequestStatusLogs] WITH CHECK CHECK CONSTRAINT [FK_PaymentRequestStatusLogs_PaymentRequests];

ALTER TABLE [dbo].[EbankingAccessLogs] WITH CHECK CHECK CONSTRAINT [FK_EbankingAccessLogs_PaymentRequests];

ALTER TABLE [dbo].[EserviceNotifications] WITH CHECK CHECK CONSTRAINT [FK_EserviceNotifications_PaymentRequests];

ALTER TABLE [dbo].[EventRegisterNotifications] WITH CHECK CHECK CONSTRAINT [FK_EventRegisterNotifications_PaymentRequests];

ALTER TABLE [dbo].[Users] WITH CHECK CHECK CONSTRAINT [FK_Users_Certificates];

ALTER TABLE [dbo].[Users] WITH CHECK CHECK CONSTRAINT [FK_Users_DisclaimerTemplates];

ALTER TABLE [dbo].[Disclaimers] WITH CHECK CHECK CONSTRAINT [FK_Disclaimers_Users];

ALTER TABLE [dbo].[VposFiBankRequests] WITH CHECK CHECK CONSTRAINT [FK_VposFiBankRequests_VposRedirects];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.EserviceAdminUsers'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
