<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
		<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
	</configSections>
	<connectionStrings>
		<add name="EPaymentsContext" connectionString="Data Source=.;Initial Catalog=EPayments;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False" providerName="System.Data.SqlClient" />
		<add name="EPaymentsLogs" connectionString="Data Source=.;Initial Catalog=EPaymentsLogs;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False" providerName="System.Data.SqlClient" />
	</connectionStrings>
	<system.web>
		<compilation debug="true" targetFramework="4.5" />
		<httpRuntime targetFramework="4.5" />
	</system.web>
	<appSettings>
		<!--Common web settings-->
		<add key="EPayments.Common:WebAddress" value="https://localhost:44300" />
		<add key="EPayments.Common:BoricaCertificateFolder" value="C:\inetpub\EPayments.Web\Certificates\BoricaVpos" />
		<add key="EPayments.Common:FiBankCertificateFolder" value="C:\inetpub\EPayments.Web\Certificates\FiBankVpos" />
		<!--EventRegister settings-->
		<add key="EPayments.EventRegister:Enabled" value="false" />
		<!--System settings-->
		<add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
		<add key="owin:appStartup" value="EPayments.Service.Host.Startup, EPayments.Service.Host" />
		<add key="owin:AutomaticAppStartup" value="false" />
	</appSettings>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Http.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<entityFramework>
		<defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
			<parameters>
				<parameter value="mssqllocaldb" />
			</parameters>
		</defaultConnectionFactory>
		<providers>
			<provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
		</providers>
	</entityFramework>
	<nlog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<targets>
			<target name="databaseInfoLog" xsi:type="AsyncWrapper" queueLimit="100000" overflowAction="Discard" timeToSleepBetweenBatches="100" batchSize="100">
				<target xsi:type="Database" dbProvider="System.Data.SqlClient" connectionStringName="EPaymentsLogs">
					<commandText>
						INSERT INTO dbo.ServiceInfoLogs ([Application], [Level], [LogDate], [IP], [Method], [RawUrl], [UserAgent], [Message], [RequestId], [SessionId], [ElapsedMilliseconds], [Status])
						SELECT @appName, @level, GETDATE(), @ip, @method, @rawUrl, @userAgent, @message,
						CASE
						WHEN LEN(@requestId) = 0 THEN NULL
						ELSE @requestId
						END AS [RequestId],
						CASE
						WHEN LEN(@sessionId) = 0 THEN NULL
						ELSE @sessionId
						END AS [SessionId],
						CASE
						WHEN LEN(@elapsedMilliseconds) = 0 THEN NULL
						ELSE @elapsedMilliseconds
						END AS [ElapsedMilliseconds],
						CASE
						WHEN LEN(@status) = 0 THEN NULL
						ELSE @status
						END AS [Status]
					</commandText>
					<parameter name="@appName" layout="${event-context:item=AppName}" />
					<parameter name="@level" layout="${level}" />
					<parameter name="@ip" layout="${event-context:item=RemoteIpAddress}" />
					<parameter name="@method" layout="${event-context:item=Method}" />
					<parameter name="@rawUrl" layout="${event-context:item=PathAndQuery}" />
					<parameter name="@userAgent" layout="${event-context:item=UserAgent}" />
					<parameter name="@sessionId" layout="${event-context:item=SessionId}" />
					<parameter name="@requestId" layout="${event-context:item=RequestId}" />
					<parameter name="@message" layout="${message} ${exception:format=tostring}" />
					<parameter name="@elapsedMilliseconds" layout="${event-context:item=ElapsedMilliseconds}" />
					<parameter name="@status" layout="${event-context:item=Status}" />
				</target>
			</target>
			<target name="databaseDataLog" xsi:type="AsyncWrapper" queueLimit="100000" overflowAction="Discard" timeToSleepBetweenBatches="100" batchSize="100">
				<target xsi:type="Database" dbProvider="System.Data.SqlClient" connectionStringName="EPaymentsLogs">
					<commandText>
						INSERT INTO [ServiceDataLogs] ([Method], [ClientId], [PostData], [ResponseData], [RawUrl], [RequestId], [RemoteIpAddress], [LogDate])
						SELECT
						@method,
						CASE WHEN LEN(@clientId) = 0 THEN NULL ELSE @clientId END,
						CASE WHEN LEN(@postData) = 0 THEN NULL ELSE @postData END,
						CASE WHEN LEN(@responseData) = 0 THEN NULL ELSE @responseData END,
						@rawUrl,
						CASE WHEN LEN(@requestId) = 0 THEN NULL ELSE @requestId END,
						@remoteIpAddress,
						GETDATE()
					</commandText>
					<parameter name="@method" layout="${event-context:item=Method}" />
					<parameter name="@clientId" layout="${event-context:item=ClientId}" />
					<parameter name="@postData" layout="${event-context:item=PostData}" />
					<parameter name="@responseData" layout="${event-context:item=ResponseData}" />
					<parameter name="@rawUrl" layout="${event-context:item=RawUrl}" />
					<parameter name="@requestId" layout="${event-context:item=RequestId}" />
					<parameter name="@remoteIpAddress" layout="${event-context:item=RemoteIpAddress}" />
				</target>
			</target>
		</targets>
		<rules>
			<logger name="infoLogger" minlevel="Info" appendTo="databaseInfoLog" />
			<logger name="dataLogger" minlevel="Info" appendTo="databaseDataLog" />
		</rules>
	</nlog>
	<system.webServer>
		<handlers>
			<clear />
			<add name="Owin" verb="*" path="*" type="Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb" />
		</handlers>
		<security>
			<requestFiltering>
				<requestLimits maxAllowedContentLength="2147483648" />
			</requestFiltering>
		</security>
	</system.webServer>
</configuration>